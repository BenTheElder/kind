#!/bin/bash

# Copyright 2020 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit -o nounset -o pipefail

# well-known docker embedded DNS is at 127.0.0.11:53
DOCKER_MAGIC_DNS_IPV4='127.0.0.11'

# first we need to detect an IP to use for reaching the docker host
DOCKER_HOST='host.docker.internal'
DOCKER_HOST_IPV4="$( (getent ahostsv4 "$DOCKER_HOST" | head -n1 | cut -d' ' -f1) || true)"
if [[ -z "${DOCKER_HOST_IPV4}" ]]; then
  DOCKER_HOST_IPV4=$(ip -4 route show default | cut -d' ' -f3)
fi

# patch docker's iptables rules to switch out the DNS IP
# they are not documented, but appear to be consistent across docker environments
patch_rules(){
  sed \
    `# switch docker DNS DNAT rules to our chosen IP` \
    -e "s/-d ${DOCKER_MAGIC_DNS_IPV4}/-d ${DOCKER_HOST_IPV4}/g" \
   `# we need to also apply these rules to non-local traffic (from pods)` \
    -e 's/-A OUTPUT \(.*\) -j DOCKER_OUTPUT/\0\n-A PREROUTING \1 -j DOCKER_OUTPUT/' \
    `# switch docker DNS SNAT rules rules to our chosen IP` \
    -e "s/--to-source :53/--to-source ${DOCKER_HOST_IPV4}:53/g"
}
iptables-save | patch_rules | iptables-restore

# now we can ensure that DNS is configured to use our IP
cp /etc/resolv.conf /etc/resolv.conf.original
sed -e "s/${DOCKER_MAGIC_DNS_IPV4}/${DOCKER_HOST_IPV4}/g" /etc/resolv.conf.original >/etc/resolv.conf

# create a magic host entry that roughly works across linux, mac, windows ...
echo "${DOCKER_HOST_IPV4} host.kind.internal" >>/etc/hosts
